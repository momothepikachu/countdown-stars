{"version":3,"file":"tiny-timer.js","sources":["../src/tiny-timer.ts"],"sourcesContent":["import { EventEmitter } from 'events'\n\ntype Status = 'running' | 'paused' | 'stopped'\n\nclass Timer extends EventEmitter {\n  private _interval: number\n  private _stopwatch: boolean\n  private _duration: number = 0\n  private _endTime: number = 0\n  private _pauseTime: number = 0\n  private _status: Status = 'stopped'\n  private _timeoutID?: NodeJS.Timeout\n\n  constructor ({ interval = 1000, stopwatch = false } = {}) {\n    super()\n    this._interval = interval\n    this._stopwatch = stopwatch\n  }\n\n  public start (duration: number, interval?: number) {\n    if (this.status !== 'stopped') return\n    if (duration == null) throw new TypeError('Must provide duration parameter')\n    this._duration = duration\n    this._endTime = Date.now() + duration\n    this._changeStatus('running')\n    this.emit('tick', this._stopwatch ? 0 : this._duration)\n    this._timeoutID = setInterval(this.tick, interval || this._interval)\n  }\n\n  public stop () {\n    if (this._timeoutID) clearInterval(this._timeoutID)\n    this._changeStatus('stopped')\n  }\n\n  public pause () {\n    if (this.status !== 'running') return\n    this._pauseTime = Date.now()\n    this._changeStatus('paused')\n  }\n\n  public resume () {\n    if (this.status !== 'paused') return\n    this._endTime += Date.now() - this._pauseTime\n    this._pauseTime = 0\n    this._changeStatus('running')\n  }\n\n  private _changeStatus (status: Status) {\n    this._status = status\n    this.emit('statusChanged', this.status)\n  }\n\n  private tick = () => {\n    if (this.status === 'paused') return\n    if (Date.now() >= this._endTime) {\n      this.stop()\n      this.emit('tick', this._stopwatch ? this._duration : 0)\n      this.emit('done')\n    } else {\n      this.emit('tick', this.time)\n    }\n  }\n\n  get time () {\n    if (this.status === 'stopped') return 0\n    const time = this.status === 'paused' ? this._pauseTime : Date.now()\n    const left = this._endTime - time\n    return this._stopwatch ? this._duration - left : left\n  }\n\n  get duration () {\n    return this._duration\n  }\n\n  get status () {\n    return this._status\n  }\n}\n\nexport default Timer\n"],"names":["Timer","constructor","this","status","Date","now","_endTime","stop","emit","_stopwatch","_duration","time","_interval","interval","stopwatch","start","duration","TypeError","_changeStatus","_timeoutID","setInterval","tick","clearInterval","pause","_pauseTime","resume","_status","left","EventEmitter"],"mappings":";;AAIA,IAAMA,KAAN;EASEC,eAAa;;gCAAyC;uEAA5B;2EAAkB;;;kBANpC,GAAoB,CAApB;iBACA,GAAmB,CAAnB;mBACA,GAAqB,CAArB;gBACA,GAAkB,SAAlB;;aA0CA;UACFC,OAAKC,MAAL,KAAgB,QAApB,IAA8B;;UAC1BC,IAAI,CAACC,GAAL,MAAcH,OAAKI,QAAvB,EAAiC;eAC1BC,IAAL;eACKC,IAAL,CAAU,MAAV,EAAkBN,OAAKO,UAAL,GAAkBP,OAAKQ,SAAvB,GAAmC,CAArD;eACKF,IAAL,CAAU,MAAV;OAHF,MAIO;eACAA,IAAL,CAAU,MAAV,EAAkBN,OAAKS,IAAvB;;KAPI;;SArCDC,SAAL,GAAiBC,QAAjB;SACKJ,UAAL,GAAkBK,SAAlB;;;;;;;;;kBAGKC,wBAAOC,QAAF,EAAoBH,QAApB;QACN,KAAKV,MAAL,KAAgB,SAApB,IAA+B;QAC3Ba,QAAQ,IAAI,IAAhB,IAAsB,MAAM,IAAIC,SAAJ,CAAc,iCAAd,CAAN;SACjBP,SAAL,GAAiBM,QAAjB;SACKV,QAAL,GAAgBF,IAAI,CAACC,GAAL,KAAaW,QAA7B;;SACKE,aAAL,CAAmB,SAAnB;;SACKV,IAAL,CAAU,MAAV,EAAkB,KAAKC,UAAL,GAAkB,CAAlB,GAAsB,KAAKC,SAA7C;SACKS,UAAL,GAAkBC,WAAW,CAAC,KAAKC,IAAN,EAAYR,QAAQ,IAAI,KAAKD,SAA7B,CAA7B;;;kBAGKL;QACD,KAAKY,UAAT,IAAqBG,aAAa,CAAC,KAAKH,UAAN,CAAb;;SAChBD,aAAL,CAAmB,SAAnB;;;kBAGKK;QACD,KAAKpB,MAAL,KAAgB,SAApB,IAA+B;SAC1BqB,UAAL,GAAkBpB,IAAI,CAACC,GAAL,EAAlB;;SACKa,aAAL,CAAmB,QAAnB;;;kBAGKO;QACD,KAAKtB,MAAL,KAAgB,QAApB,IAA8B;SACzBG,QAAL,IAAiBF,IAAI,CAACC,GAAL,KAAa,KAAKmB,UAAnC;SACKA,UAAL,GAAkB,CAAlB;;SACKN,aAAL,CAAmB,SAAnB;;;kBAGMA,wCAAef,MAAF;SACduB,OAAL,GAAevB,MAAf;SACKK,IAAL,CAAU,eAAV,EAA2B,KAAKL,MAAhC;;;qBAcEQ;QACE,KAAKR,MAAL,KAAgB,SAApB,IAA+B,OAAO,CAAP;QACzBQ,IAAI,GAAG,KAAKR,MAAL,KAAgB,QAAhB,GAA2B,KAAKqB,UAAhC,GAA6CpB,IAAI,CAACC,GAAL,EAA1D;QACMsB,IAAI,GAAG,KAAKrB,QAAL,GAAgBK,IAA7B;WACO,KAAKF,UAAL,GAAkB,KAAKC,SAAL,GAAiBiB,IAAnC,GAA0CA,IAAjD;;;qBAGEX;WACK,KAAKN,SAAZ;;;qBAGEP;WACK,KAAKuB,OAAZ;;;;;;EAvEgBE;;;;"}